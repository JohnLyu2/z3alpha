strat
(then (using-params simplify :elim_and true :blast_distinct true :local_ctx true :pull_cheap_ite true :som true :flat true :push_ite_arith true :hoist_ite true :arith_lhs true) (using-params simplify :elim_and false :blast_distinct false :local_ctx false :pull_cheap_ite false :som false :flat false :push_ite_arith false :hoist_ite false :arith_lhs false) (using-params simplify :elim_and true :blast_distinct true :local_ctx true :pull_cheap_ite true :som true :flat true :push_ite_arith true :hoist_ite true :arith_lhs true) solve-eqs elim-uncnstr solve-eqs qfidl)
(then solve-eqs (using-params smt :random_seed 400))
(then ctx-simplify (using-params smt :random_seed 300))
(then elim-uncnstr solve-eqs propagate-values solve-eqs solve-eqs smt)
