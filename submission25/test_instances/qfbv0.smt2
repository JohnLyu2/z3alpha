(set-info :smt-lib-version 2.6)
(set-logic QF_BV)
(set-info :source |
From Bryan Brady <bbrady@eecs.berkeley.edu>

Burch and Dill style correspondence checking on a simple toy processor.

|)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun top_init_pPC () (_ BitVec 32))
(declare-fun top_init_eWRT () Bool)
(declare-fun top_init_eDEST () (_ BitVec 5))
(declare-fun top_init_eOP () (_ BitVec 8))
(declare-fun top_init_eARG1 () (_ BitVec 32))
(declare-fun top_init_wWRT () Bool)
(declare-fun top_init_wDEST () (_ BitVec 5))
(declare-fun top_init_eSRC2 () (_ BitVec 5))
(declare-fun top_init_wVAL () (_ BitVec 32))
(declare-fun top_init_eARG2 () (_ BitVec 32))
(declare-fun top_init_RF () (_ BitVec 1024))
(assert (let ((?v_0 ((_ extract 0 0) (_ bv0 32)))) (let ((?v_9 (concat ?v_0 ?v_0))) (let ((?v_5 (concat ?v_9 ?v_0))) (let ((?v_1 (concat ?v_5 ?v_0))) (let ((?v_2 (concat ?v_1 ?v_1))) (let ((?v_69 (concat ?v_2 ?v_2)) (?v_4 ((_ extract 0 0) (bvadd (_ bv1 32) (_ bv0 32))))) (let ((?v_44 (concat ?v_0 ?v_4))) (let ((?v_52 (concat ?v_44 ?v_0))) (let ((?v_13 (concat ?v_52 ?v_0))) (let ((?v_3 (bvadd top_init_pPC (concat (concat ?v_69 ?v_2) (concat ?v_1 ?v_13)))) (?v_6 ((_ extract 18 14) top_init_pPC))) (let ((?v_113 (not (and top_init_eWRT (= ?v_6 top_init_eDEST))))) (let ((?v_282 (ite ?v_113 ?v_3 top_init_pPC)) (?v_111 ((_ extract 23 19) top_init_pPC)) (?v_21 (concat ?v_4 ?v_4))) (let ((?v_17 (concat ?v_21 ?v_4))) (let ((?v_14 (concat ?v_17 ?v_4))) (let ((?v_7 (concat ?v_14 ?v_4))) (let ((?v_114 (= ?v_111 ?v_7)) (?v_11 (concat ?v_5 ?v_4))) (let ((?v_8 (concat ?v_1 ?v_11)) (?v_105 ((_ extract 31 24) top_init_pPC))) (let ((?v_115 (= ?v_8 ?v_105)) (?v_67 (concat ?v_1 ?v_0))) (let ((?v_116 (= ?v_67 ?v_6)) (?v_10 (ite (and top_init_wWRT (= top_init_wDEST top_init_eSRC2)) top_init_wVAL top_init_eARG2)) (?v_58 (concat ?v_9 ?v_4))) (let ((?v_12 (concat ?v_58 ?v_0))) (let ((?v_104 (concat ?v_1 ?v_12)) (?v_108 (concat ?v_11 ?v_1)) (?v_109 (concat ?v_12 ?v_1)) (?v_110 (concat ?v_13 ?v_1))) (let ((?v_15 (ite (= ?v_8 top_init_eOP) (bvadd top_init_eARG1 ?v_10) (ite (= ?v_104 top_init_eOP) (bvsub top_init_eARG1 ?v_10) (ite (= ?v_108 top_init_eOP) (bvshl top_init_eARG1 ?v_10) (ite (= ?v_109 top_init_eOP) (bvlshr top_init_eARG1 ?v_10) (ite (= ?v_110 top_init_eOP) (bvand top_init_eARG1 ?v_10) (bvor top_init_eARG1 ?v_10))))))) (?v_179 ((_ extract 1023 992) top_init_RF))) (let ((?v_218 (ite (and top_init_eWRT (= top_init_eDEST ?v_7)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_7)) top_init_wVAL ?v_179))) (?v_16 (concat ?v_14 ?v_0)) (?v_177 ((_ extract 991 960) top_init_RF))) (let ((?v_221 (ite (and top_init_eWRT (= top_init_eDEST ?v_16)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_16)) top_init_wVAL ?v_177))) (?v_19 (concat ?v_17 ?v_0))) (let ((?v_18 (concat ?v_19 ?v_4)) (?v_175 ((_ extract 959 928) top_init_RF))) (let ((?v_223 (ite (and top_init_eWRT (= top_init_eDEST ?v_18)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_18)) top_init_wVAL ?v_175))) (?v_20 (concat ?v_19 ?v_0)) (?v_173 ((_ extract 927 896) top_init_RF))) (let ((?v_225 (ite (and top_init_eWRT (= top_init_eDEST ?v_20)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_20)) top_init_wVAL ?v_173))) (?v_25 (concat ?v_21 ?v_0))) (let ((?v_23 (concat ?v_25 ?v_4))) (let ((?v_22 (concat ?v_23 ?v_4)) (?v_171 ((_ extract 895 864) top_init_RF))) (let ((?v_227 (ite (and top_init_eWRT (= top_init_eDEST ?v_22)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_22)) top_init_wVAL ?v_171))) (?v_24 (concat ?v_23 ?v_0)) (?v_169 ((_ extract 863 832) top_init_RF))) (let ((?v_229 (ite (and top_init_eWRT (= top_init_eDEST ?v_24)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_24)) top_init_wVAL ?v_169))) (?v_27 (concat ?v_25 ?v_0))) (let ((?v_26 (concat ?v_27 ?v_4)) (?v_167 ((_ extract 831 800) top_init_RF))) (let ((?v_231 (ite (and top_init_eWRT (= top_init_eDEST ?v_26)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_26)) top_init_wVAL ?v_167))) (?v_28 (concat ?v_27 ?v_0)) (?v_165 ((_ extract 799 768) top_init_RF))) (let ((?v_233 (ite (and top_init_eWRT (= top_init_eDEST ?v_28)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_28)) top_init_wVAL ?v_165))) (?v_36 (concat ?v_4 ?v_0))) (let ((?v_32 (concat ?v_36 ?v_4))) (let ((?v_30 (concat ?v_32 ?v_4))) (let ((?v_29 (concat ?v_30 ?v_4)) (?v_163 ((_ extract 767 736) top_init_RF))) (let ((?v_235 (ite (and top_init_eWRT (= top_init_eDEST ?v_29)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_29)) top_init_wVAL ?v_163))) (?v_31 (concat ?v_30 ?v_0)) (?v_161 ((_ extract 735 704) top_init_RF))) (let ((?v_237 (ite (and top_init_eWRT (= top_init_eDEST ?v_31)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_31)) top_init_wVAL ?v_161))) (?v_34 (concat ?v_32 ?v_0))) (let ((?v_33 (concat ?v_34 ?v_4)) (?v_159 ((_ extract 703 672) top_init_RF))) (let ((?v_239 (ite (and top_init_eWRT (= top_init_eDEST ?v_33)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_33)) top_init_wVAL ?v_159))) (?v_35 (concat ?v_34 ?v_0)) (?v_157 ((_ extract 671 640) top_init_RF))) (let ((?v_241 (ite (and top_init_eWRT (= top_init_eDEST ?v_35)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_35)) top_init_wVAL ?v_157))) (?v_40 (concat ?v_36 ?v_0))) (let ((?v_38 (concat ?v_40 ?v_4))) (let ((?v_37 (concat ?v_38 ?v_4)) (?v_155 ((_ extract 639 608) top_init_RF))) (let ((?v_243 (ite (and top_init_eWRT (= top_init_eDEST ?v_37)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_37)) top_init_wVAL ?v_155))) (?v_39 (concat ?v_38 ?v_0)) (?v_153 ((_ extract 607 576) top_init_RF))) (let ((?v_245 (ite (and top_init_eWRT (= top_init_eDEST ?v_39)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_39)) top_init_wVAL ?v_153))) (?v_42 (concat ?v_40 ?v_0))) (let ((?v_41 (concat ?v_42 ?v_4)) (?v_151 ((_ extract 575 544) top_init_RF))) (let ((?v_247 (ite (and top_init_eWRT (= top_init_eDEST ?v_41)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_41)) top_init_wVAL ?v_151))) (?v_43 (concat ?v_42 ?v_0)) (?v_149 ((_ extract 543 512) top_init_RF))) (let ((?v_249 (ite (and top_init_eWRT (= top_init_eDEST ?v_43)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_43)) top_init_wVAL ?v_149))) (?v_48 (concat ?v_44 ?v_4))) (let ((?v_46 (concat ?v_48 ?v_4))) (let ((?v_45 (concat ?v_46 ?v_4)) (?v_147 ((_ extract 511 480) top_init_RF))) (let ((?v_251 (ite (and top_init_eWRT (= top_init_eDEST ?v_45)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_45)) top_init_wVAL ?v_147))) (?v_47 (concat ?v_46 ?v_0)) (?v_145 ((_ extract 479 448) top_init_RF))) (let ((?v_253 (ite (and top_init_eWRT (= top_init_eDEST ?v_47)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_47)) top_init_wVAL ?v_145))) (?v_50 (concat ?v_48 ?v_0))) (let ((?v_49 (concat ?v_50 ?v_4)) (?v_143 ((_ extract 447 416) top_init_RF))) (let ((?v_255 (ite (and top_init_eWRT (= top_init_eDEST ?v_49)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_49)) top_init_wVAL ?v_143))) (?v_51 (concat ?v_50 ?v_0)) (?v_141 ((_ extract 415 384) top_init_RF))) (let ((?v_257 (ite (and top_init_eWRT (= top_init_eDEST ?v_51)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_51)) top_init_wVAL ?v_141))) (?v_54 (concat ?v_52 ?v_4))) (let ((?v_53 (concat ?v_54 ?v_4)) (?v_139 ((_ extract 383 352) top_init_RF))) (let ((?v_259 (ite (and top_init_eWRT (= top_init_eDEST ?v_53)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_53)) top_init_wVAL ?v_139))) (?v_55 (concat ?v_54 ?v_0)) (?v_137 ((_ extract 351 320) top_init_RF))) (let ((?v_261 (ite (and top_init_eWRT (= top_init_eDEST ?v_55)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_55)) top_init_wVAL ?v_137))) (?v_56 (concat ?v_13 ?v_4)) (?v_135 ((_ extract 319 288) top_init_RF))) (let ((?v_263 (ite (and top_init_eWRT (= top_init_eDEST ?v_56)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_56)) top_init_wVAL ?v_135))) (?v_57 (concat ?v_13 ?v_0)) (?v_133 ((_ extract 287 256) top_init_RF))) (let ((?v_265 (ite (and top_init_eWRT (= top_init_eDEST ?v_57)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_57)) top_init_wVAL ?v_133))) (?v_60 (concat ?v_58 ?v_4))) (let ((?v_59 (concat ?v_60 ?v_4)) (?v_131 ((_ extract 255 224) top_init_RF))) (let ((?v_267 (ite (and top_init_eWRT (= top_init_eDEST ?v_59)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_59)) top_init_wVAL ?v_131))) (?v_61 (concat ?v_60 ?v_0)) (?v_129 ((_ extract 223 192) top_init_RF))) (let ((?v_269 (ite (and top_init_eWRT (= top_init_eDEST ?v_61)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_61)) top_init_wVAL ?v_129))) (?v_62 (concat ?v_12 ?v_4)) (?v_127 ((_ extract 191 160) top_init_RF))) (let ((?v_271 (ite (and top_init_eWRT (= top_init_eDEST ?v_62)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_62)) top_init_wVAL ?v_127))) (?v_63 (concat ?v_12 ?v_0)) (?v_125 ((_ extract 159 128) top_init_RF))) (let ((?v_273 (ite (and top_init_eWRT (= top_init_eDEST ?v_63)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_63)) top_init_wVAL ?v_125))) (?v_64 (concat ?v_11 ?v_4)) (?v_123 ((_ extract 127 96) top_init_RF))) (let ((?v_275 (ite (and top_init_eWRT (= top_init_eDEST ?v_64)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_64)) top_init_wVAL ?v_123))) (?v_65 (concat ?v_11 ?v_0)) (?v_121 ((_ extract 95 64) top_init_RF))) (let ((?v_277 (ite (and top_init_eWRT (= top_init_eDEST ?v_65)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_65)) top_init_wVAL ?v_121))) (?v_66 (concat ?v_1 ?v_4)) (?v_119 ((_ extract 63 32) top_init_RF))) (let ((?v_279 (ite (and top_init_eWRT (= top_init_eDEST ?v_66)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_66)) top_init_wVAL ?v_119))) (?v_117 ((_ extract 31 0) top_init_RF))) (let ((?v_281 (ite (and top_init_eWRT (= top_init_eDEST ?v_67)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_67)) top_init_wVAL ?v_117)))) (let ((?v_68 (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat ?v_218 ?v_221) ?v_223) ?v_225) ?v_227) ?v_229) ?v_231) ?v_233) ?v_235) ?v_237) ?v_239) ?v_241) ?v_243) ?v_245) ?v_247) ?v_249) ?v_251) ?v_253) ?v_255) ?v_257) ?v_259) ?v_261) ?v_263) ?v_265) ?v_267) ?v_269) ?v_271) ?v_273) ?v_275) ?v_277) ?v_279) ?v_281))) (let ((?v_70 ((_ extract 31 0) ?v_68)) (?v_118 (= ?v_66 ?v_6)) (?v_72 ((_ extract 63 32) ?v_68)) (?v_120 (= ?v_65 ?v_6)) (?v_73 ((_ extract 95 64) ?v_68)) (?v_122 (= ?v_64 ?v_6)) (?v_74 ((_ extract 127 96) ?v_68)) (?v_124 (= ?v_63 ?v_6)) (?v_75 ((_ extract 159 128) ?v_68)) (?v_126 (= ?v_62 ?v_6)) (?v_76 ((_ extract 191 160) ?v_68)) (?v_128 (= ?v_61 ?v_6)) (?v_77 ((_ extract 223 192) ?v_68)) (?v_130 (= ?v_59 ?v_6)) (?v_78 ((_ extract 255 224) ?v_68)) (?v_132 (= ?v_57 ?v_6)) (?v_79 ((_ extract 287 256) ?v_68)) (?v_134 (= ?v_56 ?v_6)) (?v_80 ((_ extract 319 288) ?v_68)) (?v_136 (= ?v_55 ?v_6)) (?v_81 ((_ extract 351 320) ?v_68)) (?v_138 (= ?v_53 ?v_6)) (?v_82 ((_ extract 383 352) ?v_68)) (?v_140 (= ?v_51 ?v_6)) (?v_83 ((_ extract 415 384) ?v_68)) (?v_142 (= ?v_49 ?v_6)) (?v_84 ((_ extract 447 416) ?v_68)) (?v_144 (= ?v_47 ?v_6)) (?v_85 ((_ extract 479 448) ?v_68)) (?v_146 (= ?v_45 ?v_6)) (?v_86 ((_ extract 511 480) ?v_68)) (?v_148 (= ?v_43 ?v_6)) (?v_87 ((_ extract 543 512) ?v_68)) (?v_150 (= ?v_41 ?v_6)) (?v_88 ((_ extract 575 544) ?v_68)) (?v_152 (= ?v_39 ?v_6)) (?v_89 ((_ extract 607 576) ?v_68)) (?v_154 (= ?v_37 ?v_6)) (?v_90 ((_ extract 639 608) ?v_68)) (?v_156 (= ?v_35 ?v_6)) (?v_91 ((_ extract 671 640) ?v_68)) (?v_158 (= ?v_33 ?v_6)) (?v_92 ((_ extract 703 672) ?v_68)) (?v_160 (= ?v_31 ?v_6)) (?v_93 ((_ extract 735 704) ?v_68)) (?v_162 (= ?v_29 ?v_6)) (?v_94 ((_ extract 767 736) ?v_68)) (?v_164 (= ?v_28 ?v_6)) (?v_95 ((_ extract 799 768) ?v_68)) (?v_166 (= ?v_26 ?v_6)) (?v_96 ((_ extract 831 800) ?v_68)) (?v_168 (= ?v_24 ?v_6)) (?v_97 ((_ extract 863 832) ?v_68)) (?v_170 (= ?v_22 ?v_6)) (?v_98 ((_ extract 895 864) ?v_68)) (?v_172 (= ?v_20 ?v_6)) (?v_99 ((_ extract 927 896) ?v_68)) (?v_174 (= ?v_18 ?v_6)) (?v_100 ((_ extract 959 928) ?v_68)) (?v_176 (= ?v_16 ?v_6)) (?v_101 ((_ extract 991 960) ?v_68)) (?v_178 (= ?v_7 ?v_6)) (?v_102 ((_ extract 1023 992) ?v_68)) (?v_103 (concat ?v_69 ?v_69))) (let ((?v_106 (ite ?v_116 ?v_70 (ite ?v_118 ?v_72 (ite ?v_120 ?v_73 (ite ?v_122 ?v_74 (ite ?v_124 ?v_75 (ite ?v_126 ?v_76 (ite ?v_128 ?v_77 (ite ?v_130 ?v_78 (ite ?v_132 ?v_79 (ite ?v_134 ?v_80 (ite ?v_136 ?v_81 (ite ?v_138 ?v_82 (ite ?v_140 ?v_83 (ite ?v_142 ?v_84 (ite ?v_144 ?v_85 (ite ?v_146 ?v_86 (ite ?v_148 ?v_87 (ite ?v_150 ?v_88 (ite ?v_152 ?v_89 (ite ?v_154 ?v_90 (ite ?v_156 ?v_91 (ite ?v_158 ?v_92 (ite ?v_160 ?v_93 (ite ?v_162 ?v_94 (ite ?v_164 ?v_95 (ite ?v_166 ?v_96 (ite ?v_168 ?v_97 (ite ?v_170 ?v_98 (ite ?v_172 ?v_99 (ite ?v_174 ?v_100 (ite ?v_176 ?v_101 (ite ?v_178 ?v_102 ?v_103))))))))))))))))))))))))))))))))) (?v_71 ((_ extract 13 9) top_init_pPC))) (let ((?v_180 (= ?v_67 ?v_71)) (?v_181 (= ?v_66 ?v_71)) (?v_182 (= ?v_65 ?v_71)) (?v_183 (= ?v_64 ?v_71)) (?v_184 (= ?v_63 ?v_71)) (?v_185 (= ?v_62 ?v_71)) (?v_186 (= ?v_61 ?v_71)) (?v_187 (= ?v_59 ?v_71)) (?v_188 (= ?v_57 ?v_71)) (?v_189 (= ?v_56 ?v_71)) (?v_190 (= ?v_55 ?v_71)) (?v_191 (= ?v_53 ?v_71)) (?v_192 (= ?v_51 ?v_71)) (?v_193 (= ?v_49 ?v_71)) (?v_194 (= ?v_47 ?v_71)) (?v_195 (= ?v_45 ?v_71)) (?v_196 (= ?v_43 ?v_71)) (?v_197 (= ?v_41 ?v_71)) (?v_198 (= ?v_39 ?v_71)) (?v_199 (= ?v_37 ?v_71)) (?v_200 (= ?v_35 ?v_71)) (?v_201 (= ?v_33 ?v_71)) (?v_202 (= ?v_31 ?v_71)) (?v_203 (= ?v_29 ?v_71)) (?v_204 (= ?v_28 ?v_71)) (?v_205 (= ?v_26 ?v_71)) (?v_206 (= ?v_24 ?v_71)) (?v_207 (= ?v_22 ?v_71)) (?v_208 (= ?v_20 ?v_71)) (?v_209 (= ?v_18 ?v_71)) (?v_210 (= ?v_16 ?v_71)) (?v_211 (= ?v_7 ?v_71))) (let ((?v_107 (ite ?v_180 ?v_70 (ite ?v_181 ?v_72 (ite ?v_182 ?v_73 (ite ?v_183 ?v_74 (ite ?v_184 ?v_75 (ite ?v_185 ?v_76 (ite ?v_186 ?v_77 (ite ?v_187 ?v_78 (ite ?v_188 ?v_79 (ite ?v_189 ?v_80 (ite ?v_190 ?v_81 (ite ?v_191 ?v_82 (ite ?v_192 ?v_83 (ite ?v_193 ?v_84 (ite ?v_194 ?v_85 (ite ?v_195 ?v_86 (ite ?v_196 ?v_87 (ite ?v_197 ?v_88 (ite ?v_198 ?v_89 (ite ?v_199 ?v_90 (ite ?v_200 ?v_91 (ite ?v_201 ?v_92 (ite ?v_202 ?v_93 (ite ?v_203 ?v_94 (ite ?v_204 ?v_95 (ite ?v_205 ?v_96 (ite ?v_206 ?v_97 (ite ?v_207 ?v_98 (ite ?v_208 ?v_99 (ite ?v_209 ?v_100 (ite ?v_210 ?v_101 (ite ?v_211 ?v_102 ?v_103))))))))))))))))))))))))))))))))) (?v_212 (= ?v_104 ?v_105)) (?v_215 (= ?v_108 ?v_105)) (?v_216 (= ?v_109 ?v_105)) (?v_217 (= ?v_110 ?v_105))) (let ((?v_112 (ite ?v_115 (bvadd ?v_106 ?v_107) (ite ?v_212 (bvsub ?v_106 ?v_107) (ite ?v_215 (bvshl ?v_106 ?v_107) (ite ?v_216 (bvlshr ?v_106 ?v_107) (ite ?v_217 (bvand ?v_106 ?v_107) (bvor ?v_106 ?v_107))))))) (?v_219 (= ?v_111 ?v_16)) (?v_222 (= ?v_111 ?v_18)) (?v_224 (= ?v_111 ?v_20)) (?v_226 (= ?v_111 ?v_22)) (?v_228 (= ?v_111 ?v_24)) (?v_230 (= ?v_111 ?v_26)) (?v_232 (= ?v_111 ?v_28)) (?v_234 (= ?v_111 ?v_29)) (?v_236 (= ?v_111 ?v_31)) (?v_238 (= ?v_111 ?v_33)) (?v_240 (= ?v_111 ?v_35)) (?v_242 (= ?v_111 ?v_37)) (?v_244 (= ?v_111 ?v_39)) (?v_246 (= ?v_111 ?v_41)) (?v_248 (= ?v_111 ?v_43)) (?v_250 (= ?v_111 ?v_45)) (?v_252 (= ?v_111 ?v_47)) (?v_254 (= ?v_111 ?v_49)) (?v_256 (= ?v_111 ?v_51)) (?v_258 (= ?v_111 ?v_53)) (?v_260 (= ?v_111 ?v_55)) (?v_262 (= ?v_111 ?v_56)) (?v_264 (= ?v_111 ?v_57)) (?v_266 (= ?v_111 ?v_59)) (?v_268 (= ?v_111 ?v_61)) (?v_270 (= ?v_111 ?v_62)) (?v_272 (= ?v_111 ?v_63)) (?v_274 (= ?v_111 ?v_64)) (?v_276 (= ?v_111 ?v_65)) (?v_278 (= ?v_111 ?v_66)) (?v_280 (= ?v_111 ?v_67)) (?v_213 (ite (and top_init_wWRT (= top_init_wDEST ?v_6)) top_init_wVAL (ite ?v_116 ?v_117 (ite ?v_118 ?v_119 (ite ?v_120 ?v_121 (ite ?v_122 ?v_123 (ite ?v_124 ?v_125 (ite ?v_126 ?v_127 (ite ?v_128 ?v_129 (ite ?v_130 ?v_131 (ite ?v_132 ?v_133 (ite ?v_134 ?v_135 (ite ?v_136 ?v_137 (ite ?v_138 ?v_139 (ite ?v_140 ?v_141 (ite ?v_142 ?v_143 (ite ?v_144 ?v_145 (ite ?v_146 ?v_147 (ite ?v_148 ?v_149 (ite ?v_150 ?v_151 (ite ?v_152 ?v_153 (ite ?v_154 ?v_155 (ite ?v_156 ?v_157 (ite ?v_158 ?v_159 (ite ?v_160 ?v_161 (ite ?v_162 ?v_163 (ite ?v_164 ?v_165 (ite ?v_166 ?v_167 (ite ?v_168 ?v_169 (ite ?v_170 ?v_171 (ite ?v_172 ?v_173 (ite ?v_174 ?v_175 (ite ?v_176 ?v_177 (ite ?v_178 ?v_179 ?v_103)))))))))))))))))))))))))))))))))) (?v_214 (ite (and top_init_eWRT (= top_init_eDEST ?v_71)) ?v_15 (ite (and top_init_wWRT (= top_init_wDEST ?v_71)) top_init_wVAL (ite ?v_180 ?v_117 (ite ?v_181 ?v_119 (ite ?v_182 ?v_121 (ite ?v_183 ?v_123 (ite ?v_184 ?v_125 (ite ?v_185 ?v_127 (ite ?v_186 ?v_129 (ite ?v_187 ?v_131 (ite ?v_188 ?v_133 (ite ?v_189 ?v_135 (ite ?v_190 ?v_137 (ite ?v_191 ?v_139 (ite ?v_192 ?v_141 (ite ?v_193 ?v_143 (ite ?v_194 ?v_145 (ite ?v_195 ?v_147 (ite ?v_196 ?v_149 (ite ?v_197 ?v_151 (ite ?v_198 ?v_153 (ite ?v_199 ?v_155 (ite ?v_200 ?v_157 (ite ?v_201 ?v_159 (ite ?v_202 ?v_161 (ite ?v_203 ?v_163 (ite ?v_204 ?v_165 (ite ?v_205 ?v_167 (ite ?v_206 ?v_169 (ite ?v_207 ?v_171 (ite ?v_208 ?v_173 (ite ?v_209 ?v_175 (ite ?v_210 ?v_177 (ite ?v_211 ?v_179 ?v_103)))))))))))))))))))))))))))))))))))) (let ((?v_220 (ite ?v_115 (bvadd ?v_213 ?v_214) (ite ?v_212 (bvsub ?v_213 ?v_214) (ite ?v_215 (bvshl ?v_213 ?v_214) (ite ?v_216 (bvlshr ?v_213 ?v_214) (ite ?v_217 (bvand ?v_213 ?v_214) (bvor ?v_213 ?v_214)))))))) (let ((?v_283 (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (ite (and ?v_113 ?v_114) ?v_220 ?v_218) (ite (and ?v_113 ?v_219) ?v_220 ?v_221)) (ite (and ?v_113 ?v_222) ?v_220 ?v_223)) (ite (and ?v_113 ?v_224) ?v_220 ?v_225)) (ite (and ?v_113 ?v_226) ?v_220 ?v_227)) (ite (and ?v_113 ?v_228) ?v_220 ?v_229)) (ite (and ?v_113 ?v_230) ?v_220 ?v_231)) (ite (and ?v_113 ?v_232) ?v_220 ?v_233)) (ite (and ?v_113 ?v_234) ?v_220 ?v_235)) (ite (and ?v_113 ?v_236) ?v_220 ?v_237)) (ite (and ?v_113 ?v_238) ?v_220 ?v_239)) (ite (and ?v_113 ?v_240) ?v_220 ?v_241)) (ite (and ?v_113 ?v_242) ?v_220 ?v_243)) (ite (and ?v_113 ?v_244) ?v_220 ?v_245)) (ite (and ?v_113 ?v_246) ?v_220 ?v_247)) (ite (and ?v_113 ?v_248) ?v_220 ?v_249)) (ite (and ?v_113 ?v_250) ?v_220 ?v_251)) (ite (and ?v_113 ?v_252) ?v_220 ?v_253)) (ite (and ?v_113 ?v_254) ?v_220 ?v_255)) (ite (and ?v_113 ?v_256) ?v_220 ?v_257)) (ite (and ?v_113 ?v_258) ?v_220 ?v_259)) (ite (and ?v_113 ?v_260) ?v_220 ?v_261)) (ite (and ?v_113 ?v_262) ?v_220 ?v_263)) (ite (and ?v_113 ?v_264) ?v_220 ?v_265)) (ite (and ?v_113 ?v_266) ?v_220 ?v_267)) (ite (and ?v_113 ?v_268) ?v_220 ?v_269)) (ite (and ?v_113 ?v_270) ?v_220 ?v_271)) (ite (and ?v_113 ?v_272) ?v_220 ?v_273)) (ite (and ?v_113 ?v_274) ?v_220 ?v_275)) (ite (and ?v_113 ?v_276) ?v_220 ?v_277)) (ite (and ?v_113 ?v_278) ?v_220 ?v_279)) (ite (and ?v_113 ?v_280) ?v_220 ?v_281)))) (not (or (and (= ?v_3 ?v_282) (= (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (ite ?v_114 ?v_112 ?v_102) (ite ?v_219 ?v_112 ?v_101)) (ite ?v_222 ?v_112 ?v_100)) (ite ?v_224 ?v_112 ?v_99)) (ite ?v_226 ?v_112 ?v_98)) (ite ?v_228 ?v_112 ?v_97)) (ite ?v_230 ?v_112 ?v_96)) (ite ?v_232 ?v_112 ?v_95)) (ite ?v_234 ?v_112 ?v_94)) (ite ?v_236 ?v_112 ?v_93)) (ite ?v_238 ?v_112 ?v_92)) (ite ?v_240 ?v_112 ?v_91)) (ite ?v_242 ?v_112 ?v_90)) (ite ?v_244 ?v_112 ?v_89)) (ite ?v_246 ?v_112 ?v_88)) (ite ?v_248 ?v_112 ?v_87)) (ite ?v_250 ?v_112 ?v_86)) (ite ?v_252 ?v_112 ?v_85)) (ite ?v_254 ?v_112 ?v_84)) (ite ?v_256 ?v_112 ?v_83)) (ite ?v_258 ?v_112 ?v_82)) (ite ?v_260 ?v_112 ?v_81)) (ite ?v_262 ?v_112 ?v_80)) (ite ?v_264 ?v_112 ?v_79)) (ite ?v_266 ?v_112 ?v_78)) (ite ?v_268 ?v_112 ?v_77)) (ite ?v_270 ?v_112 ?v_76)) (ite ?v_272 ?v_112 ?v_75)) (ite ?v_274 ?v_112 ?v_74)) (ite ?v_276 ?v_112 ?v_73)) (ite ?v_278 ?v_112 ?v_72)) (ite ?v_280 ?v_112 ?v_70)) ?v_283)) (and (= top_init_pPC ?v_282) (= (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat (concat ?v_102 ?v_101) ?v_100) ?v_99) ?v_98) ?v_97) ?v_96) ?v_95) ?v_94) ?v_93) ?v_92) ?v_91) ?v_90) ?v_89) ?v_88) ?v_87) ?v_86) ?v_85) ?v_84) ?v_83) ?v_82) ?v_81) ?v_80) ?v_79) ?v_78) ?v_77) ?v_76) ?v_75) ?v_74) ?v_73) ?v_72) ?v_70) ?v_283)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
