(if (> num-consts 141) (if (> size 271) (if (> size 339) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som true) solve-eqs max-bv-sharing qfnia) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params propagate-values :push_ite_bv true) qfnia)) (if (> size 83) (if (> num-exprs 6640) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som true) solve-eqs max-bv-sharing qfnia) (if (> size 137) (if (> num-consts 406) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params propagate-values :push_ite_bv true) qfnia) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500))) (if (> num-consts 181) (if (> num-exprs 2910) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params propagate-values :push_ite_bv true) qfnia) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500))) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx true :pull_cheap_ite true :push_ite_bv true :som true) lia2card (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul false :local_ctx true :pull_cheap_ite true :push_ite_bv false :som true) (using-params nla2bv :nla2bv_max_bv_size 150) solve-eqs lia2card (using-params smt :random_seed 0))))) (if (> num-consts 181) (if (> num-exprs 2570) (if (> num-consts 683) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som true) solve-eqs max-bv-sharing qfnia) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params propagate-values :push_ite_bv true) qfnia)) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params propagate-values :push_ite_bv true) qfnia)) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som true) solve-eqs max-bv-sharing qfnia)))) (if (> num-consts 3) (if (> num-consts 77) (if (> size 43) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500)) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv false :som true) card2bv elim-uncnstr (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx true :pull_cheap_ite false :push_ite_bv false :som false) solve-eqs elim-uncnstr cofactor-term-ite solve-eqs (using-params qfnra-nlsat :factor true :inline_vars true :seed 339))) (if (> size 97) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv false :som true) card2bv elim-uncnstr (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx true :pull_cheap_ite false :push_ite_bv false :som false) solve-eqs elim-uncnstr cofactor-term-ite solve-eqs (using-params qfnra-nlsat :factor true :inline_vars true :seed 339)) (if (> size 23) (if (> num-consts 30) (if (> num-exprs 250) (if (> num-consts 60) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500)) (then (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params propagate-values :push_ite_bv true) qfnia)) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500))) (then (using-params simplify :blast_distinct true :elim_and true :flat true :hi_div0 true :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv false :som true) card2bv elim-uncnstr (using-params simplify :blast_distinct false :elim_and false :flat false :hi_div0 false :hoist_mul false :local_ctx true :pull_cheap_ite false :push_ite_bv false :som false) solve-eqs elim-uncnstr cofactor-term-ite solve-eqs (using-params qfnra-nlsat :factor true :inline_vars true :seed 339))) (if (> num-consts 30) (if (> num-exprs 250) (if (> num-exprs 595) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500)) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500))) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500))) (if (> num-exprs 250) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500)) (if (> size 16) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500)) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) solve-eqs lia2card (using-params propagate-values :push_ite_bv false) max-bv-sharing (using-params simplify :blast_distinct true :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx false :pull_cheap_ite true :push_ite_bv true :som false) (using-params smt :random_seed 500)))))))) (then (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul true :local_ctx true :pull_cheap_ite true :push_ite_bv true :som true) lia2card (using-params simplify :blast_distinct false :elim_and false :flat true :hi_div0 false :hoist_mul false :local_ctx true :pull_cheap_ite true :push_ite_bv false :som true) (using-params nla2bv :nla2bv_max_bv_size 150) solve-eqs lia2card (using-params smt :random_seed 0))))